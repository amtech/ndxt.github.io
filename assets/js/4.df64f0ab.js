(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{62:function(e,r,t){"use strict";t.r(r);var a=t(0),n=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"快速入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速入门","aria-hidden":"true"}},[e._v("#")]),e._v(" 快速入门")]),t("h2",{attrs:{id:"新建项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新建项目","aria-hidden":"true"}},[e._v("#")]),e._v(" 新建项目")]),t("p",[e._v("架实现了系统管理、权限体系、数据服务等等业务系统通用的部分，开发人员进行系统开发时可以不考虑这些业务无关的内容。基于公司框架可以开发多种类型的应用系统。")]),t("ol",[t("li",[t("p",[e._v("开发一个传统的但应用系统，但应用系统就是只有一个工程结果只打一个war包，单独部署的系统；这样的系统有包括后台系统管理和前段业务应用。github的"),t("a",{attrs:{href:"https://github.com/ndxt/centit-framework-system",target:"_blank",rel:"noopener noreferrer"}},[e._v("centit-framework-system")]),e._v("中有一个"),t("a",{attrs:{href:"https://github.com/ndxt/centit-framework-system/tree/master/framework-system-demo",target:"_blank",rel:"noopener noreferrer"}},[e._v("framework-system-demo")]),e._v("模块就是一个最简明的示例。这个示例可以直接运行，其中包括了系统管理的所有实现。但依然有一下几个方面需要开发人员根据项目的情况进行修改：")]),t("ol",[t("li",[e._v("数据库的选择，目前支持MySql，Oracle，H2和SQLServer。每种数据库示例中都有对应的flyway自动初始化脚本。开发人员只需要在resources目录中的system.properties文件中定义即可。")]),t("li",[e._v("数据持久化的技术选型，目前框架无差别的实现了SpringJdbc、MyBatis和Hibernate三个版本，开发人员需要在pom.xml中修改对应的依赖，依赖有两个包一个具体的逻辑实现还有一个是配置类，同时还需要在demo的config中修改配置类的应用。强力推荐使用SpringJdbc，jdbc较为灵活，并且框架用jdbc对jpa做了最基础的实现，使用更加便。")]),t("li",[e._v("为了是示例执行简单，demo把前段打包成"),t("a",{attrs:{href:"https://github.com/ndxt/centit-framework-system/tree/master/framework-system-view-easyui",target:"_blank",rel:"noopener noreferrer"}},[e._v("framework-system-view-easyui")]),e._v("引入项目中，这样可以使用web容器（比如：Tomcat）直接运行；但是框架是基于前后端分离的思想设计的，这个jar包中只有静态的文件，将这个jar解压到前段项目中，采用前后端分离的方式开发。前段单独部署到Nginx或者Apache这样的http服务器中。")]),t("li",[e._v("虽然是但应用系统的开发方式，它依然可以用框架提供的各种功能服务产品。这些工具类功能服务产品都有一个核心包，可以通过引入这些核心包将功能服务产品直接整合到项目中。比如文件服务器的整合方式为可以参见"),t("a",{attrs:{href:"https://github.com/ndxt/centit-fileserver/tree/master/fileserver-demo/src/main/java/com/centit/fileserver/demo/localstore",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/ndxt/centit-fileserver/tree/master/fileserver-demo/src/main/java/com/centit/fileserver/demo/localstore")]),e._v(" 。")])])]),t("li",[t("p",[e._v("开发分布式系统项目。框架提供了一个集成平台"),t("a",{attrs:{href:"https://github.com/ndxt/centit-integration-platform",target:"_blank",rel:"noopener noreferrer"}},[e._v("centit-integration-platform")]),e._v("；这个平台提供了同意的系统后台管理和基础数据服务平台，并提供了服务接口。各个业务模块只要应用服务接口就可以开发成可以集成在一起的，独立部署的分布是业务系统。业务模块开发的示例代码参见"),t("a",{attrs:{href:"https://github.com/ndxt/centit-integration-platform/tree/master/centit-ip-app-demo",target:"_blank",rel:"noopener noreferrer"}},[e._v("centit-ip-app-demo")]),e._v("。这些独立部署的业务通过单点登录平台"),t("a",{attrs:{href:"https://github.com/ndxt/centit-cas",target:"_blank",rel:"noopener noreferrer"}},[e._v("centit-cas")]),e._v("集成在一起。这样的分布式系统有以下缺点：")]),t("ol",[t("li",[e._v("各个业务模块只能和集成平台之间进行数据交换，如果不同的业务模块之间需要互相调用需要显式的实现接口，并且需要知道对方的部署位置。")]),t("li",[e._v("在不借助第三方工具的情况下各个业务模块只能部署一个副本，接口调用不能做负载均衡。")]),t("li",[e._v("这样做的额主要意义是为了模块之间独立，避免互相干扰，并且可以用不同的技术栈来实现。主要应用场景是服务与性能要求不高，但是业务非常庞大和复杂的系统。比如：政府内部的业务系统，这也是南大先腾最典型的目标客户。")])])]),t("li",[t("p",[e._v("基于spring cloud 的分布式系统项目。框架的设计理念和spring boot 非常相像。不同的是spring boot重点是集成各个技术平台，先腾框架的重点是实现业务系统共有属性。先腾框架中的工程业务部分和配置部分都是分离的，所以将业务实现部分可以直接集成到spring cloud中，来实现基于spring cloud的分布式系统。"),t("a",{attrs:{href:"https://github.com/ndxt/centit-integration-platform",target:"_blank",rel:"noopener noreferrer"}},[e._v("centit-integration-platform")]),e._v(" 的审判日那个spring cloud的版本是 "),t("a",{attrs:{href:"https://github.com/ndxt/centit-framework-cloud",target:"_blank",rel:"noopener noreferrer"}},[e._v("centit-framework-cloud")]),e._v("。"),t("a",{attrs:{href:"https://github.com/ndxt/centit-framework-cloud/tree/master/framework-cloud-demo",target:"_blank",rel:"noopener noreferrer"}},[e._v("framework-cloud-demo")]),e._v(" 是基于spring cloud开发的业务模块示例代码。")])]),t("li",[t("p",[e._v("开发工具类项目。这类项目通常比较小，并且不需要复杂的组织架构和权限体系的维护，甚至不需要数据库进行持久化，只是要实现一个具体的功能，比如：文件服务器。"),t("a",{attrs:{href:"https://github.com/ndxt/centit-framework/tree/master/framework-web-demo",target:"_blank",rel:"noopener noreferrer"}},[e._v("framework-web-demo")]),e._v("就是一个最基本的示例代码。开发人员需要注意一下几点：")]),t("ol",[t("li",[t("p",[e._v("这个示例代码中的所有组织架构、权限等等配置信息都写在json文件中，用户除了可以修改密码，其他的都只能通过修改配置文件来修改。")])]),t("li",[t("p",[e._v("项目中没有数据库持久化部分，开发人员可以根据需要从"),t("a",{attrs:{href:"https://github.com/ndxt/centit-persistence",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[e._v("centit-persistence")])]),e._v("中选这持久化基础包。")])])])])]),t("p",[e._v("框架通过接口"),t("a",{attrs:{href:"https://github.com/ndxt/centit-framework/blob/master/framework-core/src/main/java/com/centit/framework/model/adapter/PlatformEnvironment.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("PlatformEnvironment")]),e._v("来屏蔽了系统组织机构、权限体系和数据服务的具体实现。"),t("strong",[e._v("所以对开发具体的业务模块来时，无论上面的那种方式，具体的开发都是一样的。框架可以通过修改依赖的包和配置信息来切换发布方式，所以强力建议业务开发人员都基于")]),t("a",{attrs:{href:"https://github.com/ndxt/centit-framework/tree/master/framework-web-demo",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[e._v("framework-web-demo")])]),t("strong",[e._v("来开发业务模块，这样做无论集成和调试都最为便捷。这个也先腾框架最核心的价值。")])]),t("h2",{attrs:{id:"新建模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新建模块","aria-hidden":"true"}},[e._v("#")]),e._v(" 新建模块")]),t("p",[e._v("在信息管理系统或则OA类等先腾的典型业务中的功能模块都会应对到数据库中的一个业务主表；在项目中就会对应一套从数据库存储、业务逻辑实现到和前段界面的交换的代码；参见 MVC分层设计和脚手架 一节。系统需要对业务模块进行权限管理，所以每一个业务木块都要有一个标识、每一个方法可以用一个url和http请求方法来标识，请参见 权限体系 一节。数据范围权限的控制需要通过 sql来控制数据的访问，请参见 参数驱动SQL 一节。 框架提倡前后端分离的方案，前段通过ajax请求后端，后端通过类restful风格方式提供数据服务，请参见 前后端数据通讯格式 一节。")])])}],!1,null,null,null);r.default=n.exports}}]);