(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{81:function(t,n,s){"use strict";s.r(n);var a=s(0),e=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述","aria-hidden":"true"}},[t._v("#")]),t._v(" 概述")]),s("p",[t._v("框架中用户组织机构设计的对象有三个：")]),s("ol",[s("li",[t._v("机构信息，机构是有层级关系的，是一个森林（多个树）的关系。")]),s("li",[t._v("用户信息。")]),s("li",[t._v("机构用户关系，机构和用户是多对多的关系。")])]),s("p",[t._v("相关源码参见："),s("a",{attrs:{href:"https://github.com/ndxt/centit-framework/tree/master/framework-core/src/main/java/com/centit/framework/model/basedata",target:"_blank",rel:"noopener noreferrer"}},[t._v("github/framework-core/basedata")]),t._v(";")]),s("h1",{attrs:{id:"机构信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#机构信息","aria-hidden":"true"}},[t._v("#")]),t._v(" 机构信息")]),s("p",[t._v("机构信息中需要特别说明的就是设计了一个机构路径unitPath属性，它的取值是这个机构所有上级机构的代码 用’/‘连接的字符串。 通过这个机构可以查找其所有的上级机构代码， 用’/'分割这个字符串就可以；也可以从数据库中查找出所有他的下级机构，只要判断其 unitPath 是否已本机构的unitPath为前缀。这样设计避免了级联查询。")]),s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("IUnitInfo")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/**机构代码 是机构的主键\n     * @return 机构代码 是机构的主键\n     */")]),t._v("\n     String "),s("span",{attrs:{class:"token function"}},[t._v("getUnitCode")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{attrs:{class:"token comment"}},[t._v("/** 机构自编代码\n     * @return 机构自编代码\n     */")]),t._v("\n     String "),s("span",{attrs:{class:"token function"}},[t._v("getDepNo")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/** 机构名称\n     * @return 机构名称\n     */")]),t._v("\n     String "),s("span",{attrs:{class:"token function"}},[t._v("getUnitName")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{attrs:{class:"token comment"}},[t._v("/** 机构简称\n     * @return 机构简称\n     */")]),t._v("\n    String "),s("span",{attrs:{class:"token function"}},[t._v("getUnitShortName")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/** 上级机构代码\n     * @return 上级机构代码\n     */")]),t._v("\n     String "),s("span",{attrs:{class:"token function"}},[t._v("getParentUnit")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/** 机构类别\n     * @return 机构类别\n     */")]),t._v("\n     String "),s("span",{attrs:{class:"token function"}},[t._v("getUnitType")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/** 机构是否有效 T/F/A  T 正常 ， F 禁用,A为新建可以删除\n     * @return 机构是否有效 T/F/A  T 正常 ， F 禁用,A为新建可以删除\n     */")]),t._v("\n     String "),s("span",{attrs:{class:"token function"}},[t._v("getIsValid")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/** 机构路径，为这个机构所有上级机构的代码 用'/'连接的字符串\n     * 通过这个机构可以查找其所有的上级机构代码， 用'/'分割这个字符串就可以\n     * 也可以从数据库中查找出所有他的下级机构，只要判断其 unitPath 是否已本机构的unitPath为前缀\n     * @return 机构路径\n     */")]),t._v("\n     String "),s("span",{attrs:{class:"token function"}},[t._v("getUnitPath")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/** 机构排序\n     * @return 机构排序\n     */")]),t._v("\n     Long "),s("span",{attrs:{class:"token function"}},[t._v("getUnitOrder")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/** 分管领导（机构管理员）\n     * @return 分管领导（机构管理员）\n     */")]),t._v("\n     String "),s("span",{attrs:{class:"token function"}},[t._v("getUnitManager")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/** 获取和第三方对接数据，一般为第三方业务数据组件\n     * @return 机构第三发业务中的主键\n     */")]),t._v("\n    String "),s("span",{attrs:{class:"token function"}},[t._v("getUnitTag")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("h1",{attrs:{id:"用户信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用户信息","aria-hidden":"true"}},[t._v("#")]),t._v(" 用户信息")]),s("p",[t._v("在框架中用户信息对象做了最简化设计，仅仅包括框架权限管理需要的必须的字段，应用系统可以通过额外的表，比如人员档案信息或者用户扩展信息来对这些信息进行扩展。")]),s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("IUserInfo")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/** 用户编码，是用户的主键\n    * @return 用户编码，是用户的主键\n    */")]),t._v("\n    String "),s("span",{attrs:{class:"token function"}},[t._v("getUserCode")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/**用户密码的密文, 密码为加盐的散列算法\n    * @return getUserPin\n    */")]),t._v("\n    "),s("span",{attrs:{class:"token annotation punctuation"}},[t._v("@JSONField")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serialize "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token boolean"}},[t._v("false")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    String "),s("span",{attrs:{class:"token function"}},[t._v("getUserPin")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/** 用户登录名 同 getUsername\n    * @return 用户登录名\n    */")]),t._v("\n    String "),s("span",{attrs:{class:"token function"}},[t._v("getLoginName")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{attrs:{class:"token comment"}},[t._v("/** 用户排序号\n    * @return 用户排序号\n    */")]),t._v("\n    Long "),s("span",{attrs:{class:"token function"}},[t._v("getUserOrder")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("h1",{attrs:{id:"用户机构关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用户机构关系","aria-hidden":"true"}},[t._v("#")]),t._v(" 用户机构关系")]),s("p",[t._v("这个对象框架权限的核心。设计的原则就是真实的反映用户在其机构中的角色。首先这是一个多对多的关系，一个用户可以在多个机构中，也有可能在一个机构中担任多个角色，每一个角色需要对应一条记录。其中：")]),s("ol",[s("li",[t._v("userStation 用户岗位，是反映用户在这个机构中做什么事情，比如：收费员、营业员、程序员等等。是反映其工作内容的或者其专业的。所以这个是没有等级没有序的。")]),s("li",[t._v("userRank 用户行政职务，是反映用户等级的，所以是有序的。比如：收费组组长、营业组组长、开发经理等等。\n这两个属性在两个维度上反映了用户在组织中的岗位和职责。")])]),s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("IUserUnit")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/**关联关系主键\n     * @return 关联关系主键\n     */")]),t._v("\n    String "),s("span",{attrs:{class:"token function"}},[t._v("getUserUnitId")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/**用户编码，是用户的主键\n     * @return 用户编码，是用户的主键\n     */")]),t._v("\n    String "),s("span",{attrs:{class:"token function"}},[t._v("getUserCode")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/**机构代码 是机构的主键\n     * @return 机构代码 是机构的主键\n     */")]),t._v("\n    String "),s("span",{attrs:{class:"token function"}},[t._v("getUnitCode")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/** 是否为默认(主)机构 T:主机构 F：辅机构\n     * @return 是否为默认(主)机构 T:主机构 F：辅机构\n     */")]),t._v("\n    String "),s("span",{attrs:{class:"token function"}},[t._v("getIsPrimary")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/**用户在本机构的岗位\n     * @return 用户在本机构的岗位\n     */")]),t._v("\n    String "),s("span",{attrs:{class:"token function"}},[t._v("getUserStation")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/** 用户在本机构的行政职务\n     * @return 用户在本机构的行政职务\n     */")]),t._v("\n    String "),s("span",{attrs:{class:"token function"}},[t._v("getUserRank")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/** 用户在本单位的排序号\n     * @return 排序号\n     */")]),t._v("\n    Long "),s("span",{attrs:{class:"token function"}},[t._v("getUserOrder")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),s("h1",{attrs:{id:"特别说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特别说明","aria-hidden":"true"}},[t._v("#")]),t._v(" 特别说明")]),s("p",[t._v("上面三个对象都有一个共同的属性 order 排序号，这个在对排位敏感的单位非常重要，所以也把它放到框架中。")])])}],!1,null,null,null);n.default=e.exports}}]);