(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{81:function(t,i,s){"use strict";s.r(i);var e=s(0),r=Object(e.a)({},function(){var t=this.$createElement,i=this._self._c||t;return i("div",{staticClass:"content"},[this._m(0),this._m(1),this._m(2),this._m(3),i("ol",[i("li",[i("router-link",{attrs:{to:"./technical_design.html"}},[this._v("技术路线")])],1),i("li",[i("router-link",{attrs:{to:"./concept_design.html"}},[this._v("概念设计")])],1),i("li",[i("router-link",{attrs:{to:"./product_design.html"}},[this._v("产品设计")])],1)])])},[function(){var t=this.$createElement,i=this._self._c||t;return i("h1",{attrs:{id:"框架的总体设计"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#框架的总体设计","aria-hidden":"true"}},[this._v("#")]),this._v(" 框架的总体设计")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"设计思想"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#设计思想","aria-hidden":"true"}},[this._v("#")]),this._v(" 设计思想")])},function(){var t=this.$createElement,i=this._self._c||t;return i("ol",[i("li",[this._v("为适应多平台的部署的策略，将前后台开发分离。不同平台的客户端：pc端、iOS、Android等等可以用共同的后端，这样可以减少开发和后期的维护成本。")]),i("li",[this._v("打造一个稳定的核心框架，不仅是运行稳定，所采用的技术栈也是相对稳定的。")]),i("li",[this._v("构建一个稳定的业务运行支撑平台，主要是组织架构的机构和权限管理体系，包括功能权限和数据权限。")]),i("li",[this._v("将框架支撑功能通过接口的方式抽象出来，比如：操作日志、消息通知等等，业务可以通过实现这些接口替换相关的行为。")]),i("li",[this._v("在支撑平台上逐步构建各个领域的小而健壮的服务组件，比如：文件服务器，工作流引擎等等。")])])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"目录"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#目录","aria-hidden":"true"}},[this._v("#")]),this._v(" 目录")])}],!1,null,null,null);i.default=r.exports}}]);