(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{83:function(t,s,a){"use strict";a.r(s);var n=a(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述","aria-hidden":"true"}},[t._v("#")]),t._v(" 概述")]),a("p",[t._v("框架是基于前后端分离的架构思想开发的，后端以restful风格url提供返回json格式的数据服务。框架对返回结果的形式做了一个约定，返回形式如下的json：")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("{\n    code:'integer 型，0 表示成功，其他均为错误代码， 不可以为空',\n    message:'code=0：消息：code!=0:错误信息。 也可以为空',\n    data:'any 可以是简单的一个数字，也可以是一个复杂的对象，Map等等，甚至可以为 null'\n}\n")])]),a("p",[t._v("客户端获取返回结果首先判断code的值，如果是0再从data中获取真正的返回数据。")]),a("h1",{attrs:{id:"服务端开发最佳实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务端开发最佳实践","aria-hidden":"true"}},[t._v("#")]),t._v(" 服务端开发最佳实践")]),a("p",[t._v("先用一段代码来展示一下：")]),a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token annotation punctuation"}},[t._v("@ApiOperation")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token string"}},[t._v('"根据学号查询学生"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("notes"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token string"}},[t._v('"根据学号查询学生。"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token annotation punctuation"}},[t._v("@ApiImplicitParams")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token annotation punctuation"}},[t._v("@ApiImplicitParam")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        name "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"studNo"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token string"}},[t._v('"学号必须是两位数"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        required"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" paramType "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"path"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dataType "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token string"}},[t._v('"String"')]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"/student/{studNo}"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token annotation punctuation"}},[t._v("@WrapUpResponseBody")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" Student "),a("span",{attrs:{class:"token function"}},[t._v("findStudent")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token annotation punctuation"}},[t._v("@PathVariable")]),t._v(" String studNo"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("StringUtils"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("length")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("studNo"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("ObjectException")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("studNo"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                ObjectException"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DATA_NOT_FOUND_EXCEPTION"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{attrs:{class:"token string"}},[t._v('"找不到对应学号的学生"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        Student stud "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Student")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        stud"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("setStudNo")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("studNo"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        stud"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("setStudName")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"小强"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" stud"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("说明：")]),a("ol",[a("li",[t._v("@WrapUpResponseBody 注解会将返回的结果转化为json，并添加code和message部分。")]),a("li",[t._v("框架会统一对异常进行处理，将ObjectException异常中的 data,code,error(message)转化为json格式，如果式普通的异常code=500,data为null。")])]),a("h1",{attrs:{id:"其他实现方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他实现方式","aria-hidden":"true"}},[t._v("#")]),t._v(" 其他实现方式")]),a("p",[t._v("除了用WrapUpResponseBody注解的方式，用其他的方式也可以，只要保证返回的格式和约定的一致就行。")]),a("h2",{attrs:{id:"responsebody-注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#responsebody-注解","aria-hidden":"true"}},[t._v("#")]),t._v(" ResponseBody 注解")]),a("p",[t._v("框架定义了"),a("a",{attrs:{href:"https://github.com/ndxt/centit-framework/blob/master/framework-adapter/src/main/java/com/centit/framework/common/ResponseData.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("ResponseData")]),t._v("接口，并作了两个的实现。同样上面的示例：")]),a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("        "),a("span",{attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"/student2/{studNo}"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token annotation punctuation"}},[t._v("@ResponseBody")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" ResponseData "),a("span",{attrs:{class:"token function"}},[t._v("findStudent2")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token annotation punctuation"}},[t._v("@PathVariable")]),t._v(" String studNo"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("StringUtils"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("length")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("studNo"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{attrs:{class:"token comment"}},[t._v('/*throw new ObjectException(studNo,\n                    ObjectException.DATA_NOT_FOUND_EXCEPTION,\n                    "找不到对应学号的学生");*/')]),t._v("\n                "),a("span",{attrs:{class:"token comment"}},[t._v("//直接返回错误数据，和上面的throw在返回结果上是等价的。")]),t._v("\n                "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ResponseData"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("makeErrorMessageWithData")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("studNo"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    ObjectException"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DATA_NOT_FOUND_EXCEPTION"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{attrs:{class:"token string"}},[t._v('"找不到对应学号的学生"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            Student stud "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Student")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            stud"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("setStudNo")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("studNo"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            stud"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("setStudName")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"小强"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ResponseData"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("makeResponseData")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stud"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),a("p",[t._v("这个实现方式和上面注解方是等价的，说明：")]),a("ol",[a("li",[t._v("和WrapUpResponseBody注解示例主要的区别式返回类型不同，这个有一个缺点就是Swagger2的文档说明中无法展示真正返回数据Student的结构。")]),a("li",[t._v("错误处理部分依然可以使用 throw 异常的形式，这里只是突出另一种写法。")])]),a("h2",{attrs:{id:"不使用spring-mvc的情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不使用spring-mvc的情况","aria-hidden":"true"}},[t._v("#")]),t._v(" 不使用spring mvc的情况")]),a("p",[t._v("框架实现了一个返回结果的工具类"),a("a",{attrs:{href:"https://github.com/ndxt/centit-framework/blob/master/framework-adapter/src/main/java/com/centit/framework/common/JsonResultUtils.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("JsonResultUtils")]),t._v("可以直接对response中的outputStream进行操作，这样根加灵活，直接上代码：")]),a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token comment"}},[t._v("// 返回错误，这个参数的顺序和上面的有点不一致")]),t._v("\n    JsonResultUtils"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("writeSingleErrorDataJson")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("604")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token string"}},[t._v('"找不到对应学号的学生"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" studNo"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" response "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// 返回正确数据")]),t._v("\n    JsonResultUtils"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("writeSingleDataJson")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stud"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("response"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("//也可以构建 ResponseData 对象")]),t._v("\n    JsonResultUtils"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("writeResponseDataAsJson")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ResponseData"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("makeResponseData")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stud"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("response"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])}],!1,null,null,null);s.default=o.exports}}]);