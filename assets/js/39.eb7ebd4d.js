(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{79:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述","aria-hidden":"true"}},[t._v("#")]),t._v(" 概述")]),a("p",[t._v("先腾框架的权限控制从控制点分两类：")]),a("ol",[a("li",[t._v("前端控制；前端页面显示和页面上的操作按钮的显示控制。")]),a("li",[t._v("后端控制；后端业务访问控制。")])]),a("p",[t._v("从控制的内容也分两类：")]),a("ol",[a("li",[t._v("功能控制；业务功能控制。比如：对某个业务的修改操作。")]),a("li",[t._v("数据范围控制；业务操作数据范围控制。")])]),a("p",[t._v("框架设计的时候是基于这样的假设：")]),a("ol",[a("li",[t._v("前后端式分离的，并且推荐前端都是静态文件，部署在http服务器上。")]),a("li",[t._v("前端通过ajax请求对后端进行访问。")])]),a("p",[t._v("所以，前端的访问控制是可以绕过去的，比如，你知道一个前端页面Url（通常是一个html文件），即使没有登录、没有权限你依然可以访问这个html，但是html中的如果有js访问后台是就会报没有权限。")]),a("h1",{attrs:{id:"后段访问控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后段访问控制","aria-hidden":"true"}},[t._v("#")]),t._v(" 后段访问控制")]),a("p",[t._v("后端访问控制包括对业务功能的访问控制，业务范围的访问控制。")]),a("h2",{attrs:{id:"业务功能访问控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#业务功能访问控制","aria-hidden":"true"}},[t._v("#")]),t._v(" 业务功能访问控制")]),a("p",[t._v("框架是基于Spring MVC开发的，每一个业务一般都对应一个controller类，每一个业务都一个标识（optId）。每一个业务功能对应到这个controller类中的一个@RequestMapping标注的方法，一般用方法名来标识（optMethod）。对功能的控制就是对应RequestMapping中标注的url的访问控制。框架中所有的url采用restful的风格。"),a("a",{attrs:{href:"https://github.com/ndxt/centit-framework/blob/master/framework-security",target:"_blank",rel:"noopener noreferrer"}},[t._v("framework-security")]),t._v("中的"),a("a",{attrs:{href:"https://github.com/ndxt/centit-framework/blob/master/framework-security/src/main/java/com/centit/framework/security/DaoAccessDecisionManager.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DaoAccessDecisionManager")]),t._v("类实现了功能访问的控制，它首先通过url来匹配对应的业务操作的方法（optMethod），然后根据这个optCode来查找权限配置库获取所有具有这个权限的角色列表，再用这个列表和用户的角色列表对比，如果有交集说明用户有这个权限，否在没有。")]),a("p",[a("strong",[t._v("注 :")])]),a("ol",[a("li",[a("em",[t._v("框架采用了Spring Security作为安全组件，Spring Security提供了四种注解，分别是@PreAuthorize , @PreFilter , @PostAuthorize 和 @PostFilter来对方法级别的访问进行控制。它虽然可以非常细粒度的控制权限，但是要硬编码在代码中，不太适用于政府类的OA系统。所以框架没有采用这中方式。")])]),a("li",[a("em",[t._v("访问控制模块自己匹配url和方法的对应关系，spring mvc同样也做了一边，这个在效率上不是高效的，目前没有解决这个问题，目前的算法是将所有的url按照层次组织成一个树形结构，匹配的算法复杂度和数的层次有关，就是和url中的/个数有关，性能还是不错的，对业务几乎没有影响。")])])]),a("h2",{attrs:{id:"业务范围访问控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#业务范围访问控制","aria-hidden":"true"}},[t._v("#")]),t._v(" 业务范围访问控制")]),a("p",[t._v("业务范围的控制的主要式通过对数据库中的数据访问范围来实现的。它包括两个部分：查询和写入（包括增删改）。")]),a("p",[t._v("数据范围控制比较复制，框架提供了一个统一的通用的解决办法，但这个方法只能用在关系数据库查询中，如果这个办法不能满足业务的需求，可以通过将数据范围权限转换为业务功能权限的方式解决。")]),a("h3",{attrs:{id:"查询控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询控制","aria-hidden":"true"}},[t._v("#")]),t._v(" 查询控制")]),a("p",[t._v("数据查询的范围控制是通过"),a("a",{attrs:{href:"https://blog.csdn.net/code_fan/article/details/81452933",target:"_blank",rel:"noopener noreferrer"}},[t._v("参数驱动SQL")]),t._v("中的"),a("strong",[t._v("外部过滤条件")]),t._v("实现的，框架在定义业务功能操作是同时定义了这个业务的数据范围过滤条件，用户在进入业务功能后可以获得自己对应的权限范围的过滤条件（可能有多个，区并集），将这个过滤条件传递给 参数驱动SQL 查询方法，返回的就是用户可以访问的数据。目前这个"),a("strong",[t._v("还没有通过aop的方式实现")]),t._v("，所以需要在开发人员在需要范围控制的地方手动添加这个"),a("strong",[t._v("程式代码")]),t._v("。")]),a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{attrs:{class:"token annotation punctuation"}},[t._v("@Service")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"testCaseManager"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("TestCaseManagerImpl")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("TestCaseManager")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("//业务代码optId")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" String "),a("span",{attrs:{class:"token function"}},[t._v("getOptId")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"testCase"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// 框架通用的服务，可以访问框架的配置信息")]),t._v("\n    "),a("span",{attrs:{class:"token annotation punctuation"}},[t._v("@Resource")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" GeneralService generalService"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// 业务对应的数据库访问到")]),t._v("\n    "),a("span",{attrs:{class:"token annotation punctuation"}},[t._v("@Resource")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" TestCaseDao testCaseDao"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// * @param ud 当前用户信息， 在Controller中可以通过 getLoginUser() 获取 ")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// 具体的业务操作，每一个业务操作有一个唯一的操作代码optCode")]),t._v("\n    "),a("span",{attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" JSONArray "),a("span",{attrs:{class:"token function"}},[t._v("listObjectsAsJson")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CentitUserDetails ud"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                Map"),a("span",{attrs:{class:"token generics function"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("String"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Object"),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" filterMap"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PageDesc pageDesc"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("// 创建当权用户信息相关的上下文")]),t._v("\n        DataPowerFilter dataPowerFilter "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" generalService"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("createUserDataPowerFilter")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ud"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("// 将当前查询参数（一般是前台输入的参数）添加到这个用户信息中 ")]),t._v("\n        dataPowerFilter"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("addSourceData")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filterMap"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("// 获取用户权限范围过滤条件，getOptId() 获取当前业务ID， query为当前业务操作方法名 optMethod")]),t._v("\n        List"),a("span",{attrs:{class:"token generics function"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("String"),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" filters "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" generalService"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("listUserDataFiltersByOptIDAndMethod")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            ud"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getUserCode")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("getOptId")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"query"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" DictionaryMapUtils"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("mapJsonArray")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 数据字典翻译工作")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("testCaseDao"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("listObjectsAsJson")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 执行数据驱动SQL查询, 具体的语句在框架中封装了")]),t._v("\n            \t\t\t\t\t\t\t\t\t"),a("span",{attrs:{class:"token comment"}},[t._v("// 这儿也可以直接调用 传入自定义的动态sql语句")]),t._v("\n                dataPowerFilter"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getSourceData")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token comment"}},[t._v("// 参数 : 当前用户相关参数（已包括查询信息）")]),t._v("\n                filters"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                        "),a("span",{attrs:{class:"token comment"}},[t._v("// 用户数据范围权限过滤条件")]),t._v("\n                pageDesc"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TestCase"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("h3",{attrs:{id:"写入控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写入控制","aria-hidden":"true"}},[t._v("#")]),t._v(" 写入控制")]),a("p",[t._v("写入控制同样也"),a("strong",[t._v("还没有通过aop的方式实现")]),t._v("，所以需要在开发人员在需要范围控制的地方手动添加这个"),a("strong",[t._v("程式代码")]),t._v("。对写入的检验可以把当前操作的对象作为数据库中的一条记录，用权限过滤表达式检验一下；对应的就是调用dataPowerFilter.checkObject 方法。完整的源码参见"),a("a",{attrs:{href:""}},[t._v("centit-persistence")]),t._v("。")]),a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token comment"}},[t._v("//* @param ud 当前用户信息， 在Controller中可以通过 getLoginUser() 获取 ")]),t._v("\n    "),a("span",{attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("saveNewCase")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CentitUserDetails ud"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TestCase testCase"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("// 创建当权用户信息相关的上下文")]),t._v("\n        DataPowerFilter dataPowerFilter "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" generalService"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("createUserDataPowerFilter")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ud"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("// 获取用户权限范围过滤条件，getOptId() 获取当前业务ID，  saveNew 为当前业务操作方法名 optMethod")]),t._v("\n        List"),a("span",{attrs:{class:"token generics function"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("String"),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" filters "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" generalService"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("listUserDataFiltersByOptIDAndMethod")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            ud"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getUserCode")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("getOptId")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"saveNew"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" passed "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" dataPowerFilter"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("checkObject")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("testCase"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" filters"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("passed"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("testCaseDao"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("saveNewObject")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("testCase"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" passed"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("h1",{attrs:{id:"前端访问控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端访问控制","aria-hidden":"true"}},[t._v("#")]),t._v(" 前端访问控制")]),a("p",[t._v("前端访问控制分为业务入口（菜单展示）和页面显示（操作权限）两部分。")]),a("h2",{attrs:{id:"业务入口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#业务入口","aria-hidden":"true"}},[t._v("#")]),t._v(" 业务入口")]),a("p",[t._v("和业务入口相关的一般包括：首页和菜单列表（业务导航栏）。根据用户所有的功能权限可以得到一个和这些权限对应的业务列表。这个类别是用户所有可操作的模块，对应的业务入口url就是用户所以可以访问的业务菜单。")]),a("p",[a("strong",[t._v("注")]),a("em",[t._v("1. 前台可以调用 /system/mainframe/menu 来获取用户的菜单列表")]),t._v("。\n"),a("em",[t._v("2. 用户访问没有权限的业务url前端并不会拦截，但是只能访问对应的页面的静态页面，无法获取相关业务数据")]),t._v("。")]),a("h2",{attrs:{id:"页面显示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#页面显示","aria-hidden":"true"}},[t._v("#")]),t._v(" 页面显示")]),a("p",[t._v("如果需要对页面上的操作进行权限控制（比如：对只有查看没有修改权限的人，隐藏修改按钮）。后台提供了接口 /system/mainframe/checkuserpower/{optId}/{method} 来查询当前用户是否有这个业务操作方法的权限。关于页面显示控制有几点说明：")]),a("ol",[a("li",[t._v("在页面上通过ajax访问后台的方法来判断是否有对应的操作权限，并依次对页面组件进行重画。")]),a("li",[t._v("在用户登录是获取用户所有的操作方法权限，保存在本地存储中，在页面展示时从本地获得数据对页面重画。")]),a("li",[t._v("上面两种方法框架都提供的通用的方法。这两种方法用户具有的权限都是和用户登录时间点有关，如果在用户登录后后台管理员给用户的权限进行变更，用户必须重新登录才能生效。")]),a("li",[t._v("和页面入口一样，页面显示也可以通过前端直接访问业务对应的操作方法url来绕过验证，但是后端的权限控制会返回403错误。")])])])}],!1,null,null,null);s.default=e.exports}}]);